% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/abessgraph.R
\name{abessbmn}
\alias{abessbmn}
\title{Title}
\usage{
abessbmn(
  x,
  tune.path = c("sequence", "gsection"),
  tune.type = c("gic", "bic", "cv", "ebic", "aic"),
  weight = NULL,
  c.max = 5,
  support.size = NULL,
  gs.range = NULL,
  always.include = NULL,
  splicing.type = 2,
  max.splicing.iter = 20,
  warm.start = TRUE,
  nfolds = 5,
  foldid = NULL,
  newton = c("exact", "approx"),
  newton.thresh = 1e-12,
  max.newton.iter = 500,
  ic.scale = 1,
  num.threads = 0,
  seed = 1,
  ...
)
}
\arguments{
\item{x}{Input matrix, of dimension \eqn{n \times p}; each row is an observation
vector and each column is a predictor/feature/variable.
Can be in sparse matrix format (inherit from class \code{"dgCMatrix"} in package \code{Matrix}).}

\item{tune.path}{The method to be used to select the optimal support size. For
\code{tune.path = "sequence"}, we solve the best subset selection problem for each size in \code{support.size}.
For \code{tune.path = "gsection"}, we solve the best subset selection problem with support size ranged in \code{gs.range},
where the specific support size to be considered is determined by golden section.}

\item{tune.type}{The type of criterion for choosing the support size.
Available options are \code{"gic"}, \code{"ebic"}, \code{"bic"}, \code{"aic"} and \code{"cv"}.
Default is \code{"gic"}.}

\item{weight}{Observation weights. When \code{weight = NULL},
we set \code{weight = 1} for each observation as default.}

\item{c.max}{an integer splicing size. Default is: \code{c.max = 2}.}

\item{support.size}{An integer vector representing the alternative support sizes.
Only used for \code{tune.path = "sequence"}. Default is \code{0:min(n, round(n/(log(log(n))log(p))))}.}

\item{gs.range}{A integer vector with two elements.
The first element is the minimum model size considered by golden-section,
the later one is the maximum one. Default is \code{gs.range = c(1, min(n, round(n/(log(log(n))log(p)))))}.
Not available now.}

\item{always.include}{An integer vector containing the indexes of variables that should always be included in the model.}

\item{splicing.type}{Optional type for splicing.
If \code{splicing.type = 1}, the number of variables to be spliced is
\code{c.max}, ..., \code{1}; if \code{splicing.type = 2},
the number of variables to be spliced is \code{c.max}, \code{c.max/2}, ..., \code{1}.
(Default: \code{splicing.type = 2}.)}

\item{max.splicing.iter}{The maximum number of performing splicing algorithm.
In most of the case, only a few times of splicing iteration can guarantee the convergence.
Default is \code{max.splicing.iter = 20}.}

\item{warm.start}{Whether to use the last solution as a warm start. Default is \code{warm.start = TRUE}.}

\item{nfolds}{The number of folds in cross-validation. Default is \code{nfolds = 5}.}

\item{newton}{A character specify the Newton's method for fitting generalized linear models,
it should be either \code{newton = "exact"} or \code{newton = "approx"}.
If \code{newton = "exact"}, then the exact hessian is used,
while \code{newton = "approx"} uses diagonal entry of the hessian,
and can be faster (especially when \code{family = "cox"}).}

\item{newton.thresh}{a numeric value for controlling positive convergence tolerance.
The Newton's iterations converge when \eqn{|dev - dev_{old}|/(|dev| + 0.1)<} \code{newton.thresh}.}

\item{max.newton.iter}{a integer giving the maximal number of Newton's iteration iterations.
Default is \code{max.newton.iter = 10} if \code{newton = "exact"}, and \code{max.newton.iter = 60} if \code{newton = "approx"}.}

\item{ic.scale}{A non-negative value used for multiplying the penalty term 
in information criterion. Default: \code{ic.scale = 1}.}

\item{num.threads}{An integer decide the number of threads to be
concurrently used for cross-validation (i.e., \code{tune.type = "cv"}).
If \code{num.threads = 0}, then all of available cores will be used.
Default: \code{num.threads = 0}.}

\item{seed}{Seed to be used to divide the sample into cross-validation folds.
Default is \code{seed = 1}.}

\item{...}{further arguments to be passed to or from methods.}
}
\value{

}
\description{
Title
}
\examples{

library(readr)
train <- read_csv("~/abess/ising-data/train.csv")
train <- as.matrix(train)
weight <- train[, 2]
X <- train[, -(1:2)]
res <- abessbmn(X)
res
}
